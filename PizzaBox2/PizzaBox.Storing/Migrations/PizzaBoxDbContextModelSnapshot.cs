// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PizzaBox.Storing.Databases;

namespace PizzaBox.Storing.Migrations
{
    [DbContext(typeof(PizzaBoxDbContext))]
    partial class PizzaBoxDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PizzaBox.Domain.OrderModels.Order", b =>
                {
                    b.Property<long>("OrderId")
                        .HasColumnType("bigint");

                    b.Property<long>("Date")
                        .HasColumnType("bigint");

                    b.Property<long>("StoreId")
                        .HasColumnType("bigint");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("OrderId");

                    b.HasIndex("StoreId");

                    b.HasIndex("UserId");

                    b.ToTable("OrderDbSet");

                    b.HasData(
                        new
                        {
                            OrderId = 1L,
                            Date = 637193891747977610L,
                            StoreId = 3L,
                            UserId = 1L
                        },
                        new
                        {
                            OrderId = 2L,
                            Date = 637193891747979310L,
                            StoreId = 2L,
                            UserId = 2L
                        },
                        new
                        {
                            OrderId = 3L,
                            Date = 637193891747979350L,
                            StoreId = 1L,
                            UserId = 3L
                        });
                });

            modelBuilder.Entity("PizzaBox.Domain.PizzaModels.Crust", b =>
                {
                    b.Property<long>("CrustId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CrustId");

                    b.ToTable("CrustDbSet");

                    b.HasData(
                        new
                        {
                            CrustId = 1L,
                            Name = "Deep Dish"
                        },
                        new
                        {
                            CrustId = 2L,
                            Name = "New York Style"
                        },
                        new
                        {
                            CrustId = 3L,
                            Name = "Thin Crust"
                        });
                });

            modelBuilder.Entity("PizzaBox.Domain.PizzaModels.Pizza", b =>
                {
                    b.Property<long>("PizzaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("CrustId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("OrderId")
                        .HasColumnType("bigint");

                    b.Property<long?>("SizeId")
                        .HasColumnType("bigint");

                    b.HasKey("PizzaId");

                    b.HasIndex("CrustId");

                    b.HasIndex("OrderId");

                    b.HasIndex("SizeId");

                    b.ToTable("PizzaDbSet");

                    b.HasData(
                        new
                        {
                            PizzaId = 1L,
                            Name = "The Dominic"
                        },
                        new
                        {
                            PizzaId = 2L,
                            Name = "The Fred"
                        },
                        new
                        {
                            PizzaId = 3L,
                            Name = "The Enthusiast"
                        });
                });

            modelBuilder.Entity("PizzaBox.Domain.PizzaModels.PizzaTopping", b =>
                {
                    b.Property<long>("PizzaId")
                        .HasColumnType("bigint");

                    b.Property<long>("ToppingId")
                        .HasColumnType("bigint");

                    b.HasKey("PizzaId", "ToppingId");

                    b.HasIndex("ToppingId");

                    b.ToTable("PizzaToppingDbSet");

                    b.HasData(
                        new
                        {
                            PizzaId = 1L,
                            ToppingId = 1L
                        },
                        new
                        {
                            PizzaId = 2L,
                            ToppingId = 1L
                        },
                        new
                        {
                            PizzaId = 3L,
                            ToppingId = 1L
                        });
                });

            modelBuilder.Entity("PizzaBox.Domain.PizzaModels.Size", b =>
                {
                    b.Property<long>("SizeId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SizeId");

                    b.ToTable("SizeDbSet");

                    b.HasData(
                        new
                        {
                            SizeId = 1L,
                            Name = "Large"
                        },
                        new
                        {
                            SizeId = 2L,
                            Name = "Medium"
                        },
                        new
                        {
                            SizeId = 3L,
                            Name = "Small"
                        });
                });

            modelBuilder.Entity("PizzaBox.Domain.PizzaModels.Topping", b =>
                {
                    b.Property<long>("ToppingId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ToppingId");

                    b.ToTable("ToppingDbSet");

                    b.HasData(
                        new
                        {
                            ToppingId = 1L,
                            Name = "Cheese"
                        },
                        new
                        {
                            ToppingId = 2L,
                            Name = "Pepperoni"
                        },
                        new
                        {
                            ToppingId = 3L,
                            Name = "Tomato Sauce"
                        });
                });

            modelBuilder.Entity("PizzaBox.Domain.StoreModels.Store", b =>
                {
                    b.Property<long>("StoreId")
                        .HasColumnType("bigint");

                    b.Property<string>("StoreAddress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StoreId");

                    b.ToTable("StoreDbSet");

                    b.HasData(
                        new
                        {
                            StoreId = 1L,
                            StoreAddress = "Street 1"
                        },
                        new
                        {
                            StoreId = 2L,
                            StoreAddress = "Street 2"
                        },
                        new
                        {
                            StoreId = 3L,
                            StoreAddress = "Street 3"
                        });
                });

            modelBuilder.Entity("PizzaBox.Domain.UserModels.User", b =>
                {
                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("UserDbSet");

                    b.HasData(
                        new
                        {
                            UserId = 1L,
                            FirstName = "Bob",
                            LastName = "Builder"
                        },
                        new
                        {
                            UserId = 2L,
                            FirstName = "Fred",
                            LastName = "Flintstone"
                        },
                        new
                        {
                            UserId = 3L,
                            FirstName = "Cat",
                            LastName = "Kansas"
                        });
                });

            modelBuilder.Entity("PizzaBox.Domain.OrderModels.Order", b =>
                {
                    b.HasOne("PizzaBox.Domain.StoreModels.Store", "Store")
                        .WithMany("Orders")
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PizzaBox.Domain.UserModels.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PizzaBox.Domain.PizzaModels.Pizza", b =>
                {
                    b.HasOne("PizzaBox.Domain.PizzaModels.Crust", "Crust")
                        .WithMany("Pizzas")
                        .HasForeignKey("CrustId");

                    b.HasOne("PizzaBox.Domain.OrderModels.Order", null)
                        .WithMany("Pizzas")
                        .HasForeignKey("OrderId");

                    b.HasOne("PizzaBox.Domain.PizzaModels.Size", "Size")
                        .WithMany("Pizzas")
                        .HasForeignKey("SizeId");
                });

            modelBuilder.Entity("PizzaBox.Domain.PizzaModels.PizzaTopping", b =>
                {
                    b.HasOne("PizzaBox.Domain.PizzaModels.Pizza", "Pizza")
                        .WithMany("PizzaTopping")
                        .HasForeignKey("PizzaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PizzaBox.Domain.PizzaModels.Topping", "Topping")
                        .WithMany("PizzaTopping")
                        .HasForeignKey("ToppingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
